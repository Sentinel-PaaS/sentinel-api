---
version: "3.7"

services:
  production:
    image: {{ productionImagePath }}
    networks:
      - traefik-public
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        failure_action: rollback
        parallelism: 1
        delay: 5s
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 5
      labels:
        - traefik.enable=true
        - traefik.http.routers.{{ appName }}_production_rtr.rule=Host(`{{ hostname }}`)
        # - traefik.http.routers.{{ appName }}_rtr.entrypoints=web
        - traefik.http.routers.{{ appName }}_production_rtr.entrypoints=websecure
        - traefik.http.routers.{{ appName }}_production_rtr.tls=true
        - traefik.http.routers.{{ appName }}_production_rtr.tls.certresolver=myresolver
        # the port listed here MUST be the internal post listed in the image
        - traefik.http.services.{{ appName }}_production_svc.loadbalancer.server.port={{ productionPort }}
        # Canary approach
        - traefik.http.routers.{{ appName }}_production_rtr.service={{ appName }}_weighted_svc@file
  canary:
    image: {{ canaryImagePath }}
    networks:
      - traefik-public
    deploy:
      mode: replicated
      replicas: 1
      labels:
        - traefik.enable=true
        - traefik.http.routers.{{ appName }}_canary_rtr.rule=Host(`{{ hostname }}`)
        - traefik.http.routers.{{ appName }}_canary_rtr.entrypoints=websecure
        - traefik.http.routers.{{ appName }}_canary_rtr.tls=true
        - traefik.http.routers.{{ appName }}_canary_rtr.tls.certresolver=myresolver
        - traefik.http.services.{{ appName }}_canary_svc.loadbalancer.server.port={{ canaryPort }}
        - traefik.http.routers.{{ appName }}_canary_rtr.service={{ appName }}_weighted_svc@file
networks:
  traefik-public:
    driver: overlay
    attachable: true
    name: traefik-public
    external: true
